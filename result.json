{
  "SchemaVersion": 2,
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "core",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 1,
        "Failures": 0,
        "Exceptions": 0
      }
    },
    {
      "Target": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=v5.1.2/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 1,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0178",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.",
          "Message": "VPC Flow Logs is not enabled for VPC",
          "Query": "data..",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0178",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0178"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 28,
            "EndLine": 51,
            "Code": {
              "Lines": [
                {
                  "Number": 28,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 35,
                  "Content": "  assign_generated_ipv6_cidr_block     = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 36,
                  "Content": "  ipv6_cidr_block                      = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 37,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "modules/vpc/main.tf",
                "Location": {
                  "StartLine": 1,
                  "EndLine": 7
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "core/main.tf",
                "Location": {
                  "StartLine": 1,
                  "EndLine": 5
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "modules/ecr/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 1,
        "Failures": 2,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0031",
          "AVDID": "AVD-AWS-0031",
          "Title": "ECR images tags shouldn't be mutable.",
          "Description": "ECR images should be set to IMMUTABLE to prevent code injection through image mutation.\n\nThis can be done by setting \u003ccode\u003eimage_tab_mutability\u003c/code\u003e to \u003ccode\u003eIMMUTABLE\u003c/code\u003e",
          "Message": "Repository tags are mutable.",
          "Query": "data..",
          "Resolution": "Only use immutable images in ECR",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0031",
          "References": [
            "https://sysdig.com/blog/toctou-tag-mutability/",
            "https://avd.aquasec.com/misconfig/avd-aws-0031"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.ecr",
            "Provider": "AWS",
            "Service": "ecr",
            "StartLine": 1,
            "EndLine": 7,
            "Code": {
              "Lines": [
                {
                  "Number": 1,
                  "Content": "resource \"aws_ecr_repository\" \"main\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 2,
                  "Content": "  name = var.namespace",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 3,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 4,
                  "Content": "  image_scanning_configuration {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 5,
                  "Content": "    scan_on_push = true",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 6,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 7,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.ecr",
                "Filename": "shared/main.tf",
                "Location": {
                  "StartLine": 1,
                  "EndLine": 6
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0033",
          "AVDID": "AVD-AWS-0033",
          "Title": "ECR Repository should use customer managed keys to allow more control",
          "Description": "Images in the ECR repository are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.",
          "Message": "Repository is not encrypted using KMS.",
          "Query": "data..",
          "Resolution": "Use customer managed keys",
          "Severity": "LOW",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0033",
          "References": [
            "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0033"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.ecr",
            "Provider": "AWS",
            "Service": "ecr",
            "StartLine": 1,
            "EndLine": 7,
            "Code": {
              "Lines": [
                {
                  "Number": 1,
                  "Content": "resource \"aws_ecr_repository\" \"main\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 2,
                  "Content": "  name = var.namespace",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 3,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 4,
                  "Content": "  image_scanning_configuration {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 5,
                  "Content": "    scan_on_push = true",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 6,
                  "Content": "  }",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 7,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.ecr",
                "Filename": "shared/main.tf",
                "Location": {
                  "StartLine": 1,
                  "EndLine": 6
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "modules/iam/groups/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 3,
        "Exceptions": 0
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0123",
          "AVDID": "AVD-AWS-0123",
          "Title": "IAM groups should have MFA enforcement activated.",
          "Description": "\nIAM groups should be protected with multi factor authentication to add safe guards to password compromise.\n\t\t\t",
          "Message": "Multi-Factor authentication is not enforced for group",
          "Query": "data..",
          "Resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0123",
          "References": [
            "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details",
            "https://avd.aquasec.com/misconfig/avd-aws-0123"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.iam_groups",
            "Provider": "AWS",
            "Service": "iam",
            "StartLine": 6,
            "EndLine": 8,
            "Code": {
              "Lines": [
                {
                  "Number": 6,
                  "Content": "resource \"aws_iam_group\" \"bot\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 7,
                  "Content": "  name = \"Bot-group\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 8,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.iam_groups",
                "Filename": "shared/main.tf",
                "Location": {
                  "StartLine": 8,
                  "EndLine": 10
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0123",
          "AVDID": "AVD-AWS-0123",
          "Title": "IAM groups should have MFA enforcement activated.",
          "Description": "\nIAM groups should be protected with multi factor authentication to add safe guards to password compromise.\n\t\t\t",
          "Message": "Multi-Factor authentication is not enforced for group",
          "Query": "data..",
          "Resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0123",
          "References": [
            "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details",
            "https://avd.aquasec.com/misconfig/avd-aws-0123"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.iam_groups",
            "Provider": "AWS",
            "Service": "iam",
            "StartLine": 2,
            "EndLine": 4,
            "Code": {
              "Lines": [
                {
                  "Number": 2,
                  "Content": "resource \"aws_iam_group\" \"admin\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 3,
                  "Content": "  name = \"Admin-group\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 4,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.iam_groups",
                "Filename": "shared/main.tf",
                "Location": {
                  "StartLine": 8,
                  "EndLine": 10
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0123",
          "AVDID": "AVD-AWS-0123",
          "Title": "IAM groups should have MFA enforcement activated.",
          "Description": "\nIAM groups should be protected with multi factor authentication to add safe guards to password compromise.\n\t\t\t",
          "Message": "Multi-Factor authentication is not enforced for group",
          "Query": "data..",
          "Resolution": "Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0123",
          "References": [
            "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details",
            "https://avd.aquasec.com/misconfig/avd-aws-0123"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.iam_groups",
            "Provider": "AWS",
            "Service": "iam",
            "StartLine": 10,
            "EndLine": 12,
            "Code": {
              "Lines": [
                {
                  "Number": 10,
                  "Content": "resource \"aws_iam_group\" \"developer\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 11,
                  "Content": "  name = \"Developer-group\"",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 12,
                  "Content": "}",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": true
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.iam_groups",
                "Filename": "shared/main.tf",
                "Location": {
                  "StartLine": 8,
                  "EndLine": 10
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "shared",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 1,
        "Failures": 0,
        "Exceptions": 0
      }
    }
  ]
}
